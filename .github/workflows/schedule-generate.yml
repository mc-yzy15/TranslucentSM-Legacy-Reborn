name: Schedule Generate Release

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史以便生成更改日志

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Build Solution
        shell: pwsh
        run: |
          msbuild start.sln /p:Configuration=Release /p:Platform=x64
          if (-not $?) {
            Write-Error "Build failed"
            exit 1
          }

      - name: Check Build Output
        shell: pwsh
        run: |
          $exePath = "./src/Release/TranslucentSM.exe"
          if (-not (Test-Path $exePath)) {
            Write-Error "Build output not found at $exePath"
            exit 1
          }
          echo "EXE_PATH=$exePath" >> $env:GITHUB_ENV

      - name: Get current time
        id: current-time
        shell: pwsh
        run: |
          $currentTime = [System.DateTime]::UtcNow.ToString("yyyy-MM-dd HH:mm:ss")
          echo "time=$currentTime" >> $env:GITHUB_OUTPUT

      - name: Generate Release Notes
        id: release-notes
        shell: pwsh
        run: |
          $commits = git log --pretty=format:"- %h %s" -n 10
          $releaseNotes = @"
          ## Automated Build Release
          
          Build Time (UTC): ${{ steps.current-time.outputs.time }}
          
          ### Recent Changes:
          $commits
          
          ### Note
          - This is an automated build
          - Please report any issues on the GitHub issue tracker
          "@
          
          $releaseNotes | Out-File -FilePath release_notes.md -Encoding UTF8
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: auto-${{ github.run_number }}
          release_name: "Automated Build ${{ steps.current-time.outputs.time }}"
          body_path: release_notes.md
          draft: false
          prerelease: true

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.EXE_PATH }}
          asset_name: TranslucentSM.exe
          asset_content_type: application/octet-stream

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: TranslucentSM-Build-${{ github.run_number }}
          path: ${{ env.EXE_PATH }}
          retention-days: 7